// Copyright 2017 The Nomulus Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

{namespace registry.soy.registrar.domainepp}


/* General Availability. */
/**
 * Domain create request.
 */
{template .create stricthtml="false"}
  {@param item: ?}
  {@param clTrid: ?}
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>{$item['domain:name']}</domain:name>
        {if isNonnull($item['domain:period'])}
        <domain:period unit="y">{$item['domain:period']}</domain:period>
        {/if}
        {if isNonnull($item['domain:ns'])}
        <domain:ns>
          {for $hostObj in $item['domain:ns']['domain:hostObj']}
          <domain:hostObj>{$hostObj.value}</domain:hostObj>
          {/for}
        </domain:ns>
        {/if}
        {if isNonnull($item['domain:registrant'])}
        <domain:registrant>{$item['domain:registrant']}</domain:registrant>
        {/if}
        {if isNonnull($item['domain:contact'])}
          {for $contact in $item['domain:contact']}
        <domain:contact type="{$contact['@type']}">{$contact.value}</domain:contact>
          {/for}
        {/if}
        <domain:authInfo>
          <domain:pw>{$item['domain:authInfo']['domain:pw']}</domain:pw>
        </domain:authInfo>
      </domain:create>
    </create>
    <clTRID>{$clTrid}</clTRID>
  </command>
</epp>
{/template}


/**
 * Domain info request.
 */
{template .info stricthtml="false"}
  {@param id: ?}
  {@param clTrid: ?}
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <info>
      <domain:info xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name hosts="all">{$id}</domain:name>
      </domain:info>
    </info>
    <clTRID>{$clTrid}</clTRID>
  </command>
</epp>
{/template}


/**
 * Domain update request.
 */
{template .update stricthtml="false"}
  {@param item: ?}
  {@param clTrid: ?}
  {@param? addHosts: ?}  /** list of hostObj to add. */
  {@param? remHosts: ?}  /** list of hostObj to remove. */
  {@param? addContacts: ?}  /** list of contact to add. */
  {@param? remContacts: ?}  /** list of contact to remove. */
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <update>
      <domain:update xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>{$item['domain:name']}</domain:name>
        {if isNonnull($addHosts) or isNonnull($addContacts)}
          {call .addRem}
            {param isAdd: true /}
            {param hosts: $addHosts /}
            {param contacts: $addContacts /}
          {/call}
        {/if}
        {if isNonnull($remHosts) or isNonnull($remContacts)}
          {call .addRem}
            {param isAdd: false /}
            {param hosts: $remHosts /}
            {param contacts: $remContacts /}
          {/call}
        {/if}
        <domain:chg>
          <domain:registrant>{$item['domain:registrant']}</domain:registrant>
          <domain:authInfo>
            <domain:pw>{$item['domain:authInfo']['domain:pw']}</domain:pw>
          </domain:authInfo>
        </domain:chg>
      </domain:update>
    </update>
    <clTRID>{$clTrid}</clTRID>
  </command>
</epp>
{/template}


{template .addRem}
  {@param isAdd: ?}
  {@param? hosts: ?}
  {@param? contacts: ?}
{let $tagName: $isAdd ? 'domain:add' : 'domain:rem' /}
<{$tagName}>
  {if isNonnull($hosts)}
  <domain:ns>
    {for $host in $hosts}
    <domain:hostObj>{$host.value}</domain:hostObj>
    {/for}
  </domain:ns>
  {/if}
  {if isNonnull($contacts)}
    {for $contact in $contacts}
  <domain:contact type="{$contact['@type']}">{$contact.value}</domain:contact>
    {/for}
  {/if}
</{$tagName}>
{/template}
