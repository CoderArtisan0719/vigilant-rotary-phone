// Copyright 2019 The Nomulus Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package google.registry.gradle.plugin;

import java.util.ArrayList;
import org.gradle.api.DefaultTask;
import org.gradle.api.Task;
import org.gradle.api.reporting.Report;
import org.gradle.api.reporting.ReportContainer;
import org.gradle.api.reporting.Reporting;
import org.gradle.api.tasks.TaskAction;

/**
 * A task that uploads the Reports generated by other tasks to GCS.
 *
 * <p>TODO:implement it.
 */
public class GcsReportUploader extends DefaultTask {

  private final ArrayList<Task> reportingTasks = new ArrayList<>();

  private String bucket = null;

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }

  @TaskAction
  void uploadResults() {
    System.out.format("GcsReportUploader uploading to %s: Unimplemented\n", bucket);
  }

  private static Reporting<? extends ReportContainer<? extends Report>> asReporting(Task task) {
    return (Reporting) task;
  }

  void addTask(Task task) {
    if (!(task instanceof Reporting)) {
      return;
    }
    reportingTasks.add(task);
    task.finalizedBy(this);
  }
}
